lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(as.formula(sprintf(paste(dv, "~", paste(ivs[ivs != x], collapse = " + ")))),
data = lm$model))$r.squared)
stop("breaks here")
}
for(x in ivs) {
# cat(paste(x, "\n"))
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(as.formula(sprintf(paste(dv, "~", paste(ivs[ivs != x], collapse = " + ")))),
data = lm$model))$r.squared)
#stop("breaks here")
}
for(x in 2:nrow(lm_coef)) if(lm_coef$B[x] < 0 ) lm_coef$semi[x] = -1*lm_coef$semi[x]
View(lm_coef)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/lm_stepwise.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
paste(dv, "~", paste0(ivs[ivs != x], collapse = " + "))))
paste(dv, "~", paste0(ivs[ivs != x], collapse = " + "))
parse(text=paste(dv, "~", paste0(ivs[ivs != x], collapse = " + ")))
eval(parse(text=paste(dv, "~", paste0(ivs[ivs != x], collapse = " + "))))
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = as.formula(paste(dv, "~", tmp_x_term))
as.formula(paste(dv, "~", tmp_x_term))
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
parse(text=paste(dv, "~", tmp_x_term))
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = parse(text=paste(dv, "~", tmp_x_term))
stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = parse(text=paste(dv, "~", tmp_x_term))
# stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = eval(parse(text=paste(dv, "~", tmp_x_term)))
# stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = eval(parse(text=paste(dv, "~", tmp_x_term)))
# stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
for(x in 2:nrow(lm_coef)) if(lm_coef$B[x] < 0 ) lm_coef$semi[x] = -1*lm_coef$semi[x]
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
paste0(ivs[ivs != x], collapse = " + ")
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
paste(dv, "~", tmp_x_term)
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = eval(parse(text=paste(dv, "~", tmp_x_term)))
stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = eval(parse(text=paste(dv, "~", tmp_x_term)))
#stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
ivs = unlist(strsplit(x_term, " \\+ "))
for(x in ivs) {
# cat(paste(x, "\n"))
tmp_x_term = paste0(ivs[ivs != x], collapse = " + ")
formul = eval(parse(text=paste(dv, "~", tmp_x_term)))
#stop("breaks here")
lm_coef$semi[startsWith(rownames(lm_coef), x)][1] =
sqrt(summ_lm$r.squared -
summary(stats::lm(formul,
data = lm$model))$r.squared)
}
rm(for_cors, lm, lm_coef, lm_stdzd, summ_lm, test1, CI, CL, correlations, dv, formul, iv, ivs, partial, semi, std, tmp_x_term, verbose, warn, x, x_term)
rm(cors)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/lm_stepwise.R", echo=TRUE)
test1 = hierarchical_reg(test_reg, stepwise = F, verbose = T)
test1 = lm_summarize(test_reg)
View(test1)
test_reg2 = lm(variet90 ~ cenhod90, df_PSY631Data)
lm_summarize(test_reg2)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
test_reg2 = lm(variet90 ~ cenhod90, df_PSY631Data)
lm_summarize(test_reg2)
hierarchical_reg(test_reg)
source("~/GitHub/puRduePsych/R/lm_stepwise.R", echo=TRUE)
hierarchical_reg(test_reg, steps)
hierarchical_reg(test_reg, steps, stepwise = T)
usethis::use_testthat()
usethis::use_test()
?lm
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
?warning
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, stepwise = T, verbose = T)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = T, steps_verbose = F)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = F, steps_verbose = t)
hierarchical_reg(test_reg, steps, stepwise = T, verbose = F, steps_verbose = T)
?stats::as.formula
?pf
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
load("./data/ClassData.RData")
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = df_PSY631Data)
pred_vars = list(Background = c("cenhod90", "parent90", "bigses90"),
Mental_Health = c("cd90", "adhd90"),
Individual_Diffs = c("cogimp90", "wviq90", "cpstot90"))
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, simultaneous = T, simult_verbose=T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
if(!require(psych))      install.packages("psych")
if(!require(knitr))      install.packages("knitr")
if(!require(kableExtra)) install.packages("kableExtra")
if(!require(puRduePsych)) {
if(!require(devtools)) install.packages("devtools")
devtools::install_github("daniboid/puRduePsych")
}
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = df_PSY631Data)
pred_vars = list(Background = c("cenhod90", "parent90", "bigses90"),
Mental_Health = c("cd90", "adhd90"),
Individual_Diffs = c("cogimp90", "wviq90", "cpstot90"))
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, stepwise = T)
kable(step_reg[[1]], booktabs = T,
col.names = c("", "$R^2$", "adjusted $R^2$",
"$F_{model}$", "$df_{num}$", "$df_{denom}$", "$p_{model}$",
"$\\Delta R^2$", "$F_{\\Delta}$", "$df_{num}$", "$p_{\\Delta}$"),
escape = F, digits = 3)
summary(step_reg)
step_reg[[1]]
step_reg$steps
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
simult_reg$steps
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
?warning
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
simult_reg$steps
step_output = data.frame(
step      = c(),
R_sq_semi = c(),
F_semi    = c(),
df1_semi  = c(),
df2_semi  = c(),
sig       = c()
)
step_output = data.frame(
step,
R_sq_semi,
F_semi,
df1_semi,
df2_semi,
sig
)
# Get the output...
step_output = data.frame(
step = c(),
R_sq = c(),
R_sq_adj = c(),
mod_F = c(),
mod_df1 = c(),
mod_df2 = c(),
mod_sig = c(),
R_sq_change = c(),
change_F = c(),
change_df1 = c(),
change_sig = c()
)
step_output = data.frame(
step      = c(),
R_sq_semi = c(),
F_semi    = c(),
df1_semi  = c(),
df2_semi  = c(),
sig       = c()
)
if(simult_verbose) cat(paste0("Evaluating semipartial for the set: ",
names(chunks)[c]), "\n\n") # list(budy_chunk=unlist(unname(chunks[-c])), chunks[c]))
tmp_chunks = list(budy_chunk=unlist(unname(chunks[-c])), chunks[c])
chunks = pred_vars
simut_verbose = T
c=1
if(simult_verbose) cat(paste0("Evaluating semipartial for the set: ",
names(chunks)[c]), "\n\n") # list(budy_chunk=unlist(unname(chunks[-c])), chunks[c]))
simult_verbose = T
if(simult_verbose) cat(paste0("Evaluating semipartial for the set: ",
names(chunks)[c]), "\n\n") # list(budy_chunk=unlist(unname(chunks[-c])), chunks[c]))
tmp_chunks = list(budy_chunk=unlist(unname(chunks[-c])), chunks[c])
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
simult_reg$steps
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T, simult_verbose = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T, simult_verbose = T)
simult_reg$steps
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T, simult_verbose = T)
simult_reg$steps
step_reg$steps
hier_reg_123 = hierarchical_reg(lm_overall, pred_vars)
pred_vars[1]
pred_vars[2]
hier_reg_231 = hierarchical_reg(lm_overall, list(pred_vars[2], pred_vars[3], pred_vars[1]))
hier_reg_123 = hierarchical_reg(lm_overall, pred_vars)
hier_reg_231 = hierarchical_reg(lm_overall, list(pred_vars[2], pred_vars[3], pred_vars[1]))
simult_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, simultaneous = T)
hier_reg_312 = hierarchical_reg(lm_overall, list(pred_vars[3], pred_vars[1], pred_vars[2]))
hier_reg_123$steps
hier_reg_231$steps
hier_reg_312$steps
simult_reg$steps
?hierarchical_reg
hier_reg_123
simult_reg$steps
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
if(!require(psych))      install.packages("psych")
if(!require(knitr))      install.packages("knitr")
if(!require(kableExtra)) install.packages("kableExtra")
if(!require(puRduePsych)) {
if(!require(devtools)) install.packages("devtools")
devtools::install_github("daniboid/puRduePsych")
}
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = lapply(df_PSY631Data, function(x){return(as.numeric(x))}))
pred_vars = list(BG = c("cenhod90", "parent90", "bigses90"),
MentHel = c("cd90", "adhd90"),
IndvDifs = c("cogimp90", "wviq90", "cpstot90"))
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars, stepwise = T)
kable(step_reg[[1]], booktabs = T,
col.names = c("", "$R^2$", "adj. $R^2$",
"$F_{model}$", "$df_{num}$", "$df_{denom}$", "$p_{model}$",
"$\\Delta R^2$", "$F_{\\Delta}$", "$df_{num}$", "$p_{\\Delta}$"),
escape = F, digits = 3)
lm_summarize(lm_overall)
lm_summarize(lm_overall, verbose = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
lm_summarize(lm_overall, verbose = T)
step_reg$coefs
step_reg
lm_summarize(lm_overall, verbose = T)
summary(lm_overall)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
if(!require(psych))      install.packages("psych")
if(!require(knitr))      install.packages("knitr")
if(!require(kableExtra)) install.packages("kableExtra")
if(!require(puRduePsych)) {
if(!require(devtools)) install.packages("devtools")
devtools::install_github("daniboid/puRduePsych")
}
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = df_PSY631Data)
pred_vars = list(BG = c("cenhod90", "parent90", "bigses90"),
MentHel = c("cd90", "adhd90"),
IndvDifs = c("cogimp90", "wviq90", "cpstot90"))
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
?type.convert
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
step_reg = hierarchical_reg(y=lm_overall, chunks = pred_vars)#, stepwise = T)
lm = lm_overall
if(!is.numeric(CL) | CL > 1 | CL <= 0) stop("Confidence Level (CL) needs to be a numeric value between 0 and 1.")
dv = as.character(lm$terms)[2]
x_term = as.character(lm$terms)[3]
ivs = unlist(strsplit(x_term, " \\+ "))
summ_lm = summary(lm)
lm_coef = data.frame(summ_lm$coefficients)
names(lm_coef) = c("B", "S.E.", "t", "p.val")
for_cors = data.frame(lapply(lm$model, function(x) { x = as.numeric(x); return(x) }))
cors = stats::cor(for_cors)
lm_stdzd = summary(lm(eval(parse(text=paste(dv, "~", x_term, collapse =" + "))),
data.frame(lapply(lm$model, FUN = function(x) {
if(is.numeric(x)) x = scale(x)
if(is.factor(x))  x = scale(as.numeric(x))
return(x)}) )))
lm_coef$Beta = data.frame(lm_stdzd$coefficients)$Estimate
lm_stdzd
lm_overall
summary(lm_overall)
as.numeric(lm$model[,"adhd90"])
scale(as.numeric(lm$model[,"adhd90"]))
lm_stdzd$coefficients
data.frame(lm_stdzd$coefficients)$Estimate
names(data.frame(lm_stdzd$coefficients)$Estimate)
names(lm_stdzd$coefficients)
rownames(lm_stdzd$coefficients)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
lm_summarize(lm_overall)
source("~/GitHub/puRduePsych/R/lm_summarize.R", echo=TRUE)
lm_summarize(lm_overall)
lm_summarize(lm_overall, verbose = T)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = df_PSY631Data)
knitr::opts_chunk$set(echo = TRUE)
options(knitr.kable.NA = '-')
if(!require(psych))      install.packages("psych")
if(!require(knitr))      install.packages("knitr")
if(!require(kableExtra)) install.packages("kableExtra")
if(!require(puRduePsych)) {
if(!require(devtools)) install.packages("devtools")
devtools::install_github("daniboid/puRduePsych")
}
lm_overall = lm(variet90 ~ cenhod90 + parent90 + bigses90 + cd90 + adhd90 +
cogimp90 + wviq90 + cpstot90,
data = df_PSY631Data)
pred_vars = list(BG = c("cenhod90", "parent90", "bigses90"),
MentHel = c("cd90", "adhd90"),
IndvDifs = c("cogimp90", "wviq90", "cpstot90"))
step_reg = hierarchical_reg(y=lm_overall,
chunks = pred_vars,
stepwise = T,
verbose = T)
kable(step_reg[[1]], booktabs = T,
col.names = c("", "$R^2$", "adj. $R^2$",
"$F_{model}$", "$df_{num}$", "$df_{denom}$", "$p_{model}$",
"$\\Delta R^2$", "$F_{\\Delta}$", "$df_{num}$", "$p_{\\Delta}$"),
escape = F, digits = 3)
?append
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
hierarchical_reg(lm_overall, pred_vars, verbose = T)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
source("~/GitHub/puRduePsych/R/hierarchical_reg.R", echo=TRUE)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, verbose = T, stepwise = T)
step_reg2 = hierarchical_reg(lm_overall, pred_vars, steps_verbose = T, stepwise = T)
